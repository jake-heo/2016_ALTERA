module yuv2rgb (valid, clk, rst, Y, U, V, R, G, B);

	input				valid, clk, rst;
	input [7:0]		Y;
	input	signed	[7:0]		U, V;
	output	reg	[7:0]	R, G, B;
	
	wire	[19:0]	R1, G1, B1;
	
	assign R1 = Y * 9'b100000000 + V * 9'b101100111;
	assign G1 = Y * 9'b100000000 - U * 7'b1011000 - V * 8'b10110111; 
	assign B1 = Y * 9'b100000000 + U * 9'b111000110;

	always @(posedge clk or negedge rst)	
	begin
		if	(!rst)	begin
			R <= 8'b0;
			G <= 8'b0;
			B <= 8'b0;
		end
		else	if	(valid)	begin
			R <= R1[15:8];
			G <= G1[15:8];
			B <= B1[15:8];
		end
	end
	
	
endmodule
